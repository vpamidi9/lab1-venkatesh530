catch { setDesignMode -process 28 }
catch { setAnalysisMode -analysisType onChipVariation }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -cppr both }
catch { setAnalysisMode -skew true }
catch { setOptMode -activeHoldViews { func_min_scenario  } }
catch { setOptMode -activeSetupViews { func_max_scenario } }
catch { setOptMode -autoHoldViews { func_min_scenario } }
catch { setOptMode -autoSetupViews { func_max_scenario} }
catch { setOptMode -autoTDGRSetupViews { func_max_scenario} }
catch { setOptMode -autoViewHoldTargetSlack 0 }
catch { setOptMode -deleteInst true }
catch { setOptMode -drcMargin 0 }
catch { setOptMode -fixDrc true }
catch { setOptMode -optimizeFF true }
catch { setOptMode -preserveAllSequential false }
catch { setOptMode -setupTargetSlack 0 }
catch { setOptMode -usefulSkew false }
catch { setOptMode -usefulSkewCCOpt none }
catch { setOptMode -usefulSkewPostRoute false }
catch { setOptMode -usefulSkewPreCTS false }
catch { setPathGroupOptions reg2reg -effortLevel high -weight 2 }
catch { setPathGroupOptions reg2out -effortLevel low }
catch { setPathGroupOptions in2reg -effortLevel low }
catch { setPathGroupOptions in2out -effortLevel low }
catch { setPathGroupOptions OUTPUTS -effortLevel low }
catch { setPathGroupOptions INPUTS -effortLevel low }
catch { setExtractRCMode  -engine postRoute -total_c_th 0 -relative_c_th 1 -coupling_c_th 0.1 -minNetTermNrToBeInMem 50 }
catch {setNanoRouteMode -quiet -drouteEndIteration 10}
catch {setNanoRouteMode -quiet -droutePostRouteSpreadWire "false"}
catch {setNanoRouteMode -quiet -drouteStartIteration 0}
catch {setNanoRouteMode -quiet -drouteUseMinSpacingForBlockage auto}
catch {setNanoRouteMode -quiet -extractThirdPartyCompatible false}
catch {setNanoRouteMode -quiet -grouteExpTdStdDelay 16.100000}
catch {setNanoRouteMode -quiet -grouteExpTdUseTifTimingEngineForImportDesign false}
catch {setNanoRouteMode -quiet -routeStrictlyHonorNonDefaultRule "false"}
catch {setNanoRouteMode -quiet -routeWithSiPostRouteFix false}

catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepInstInSdc false -keepFlatten true }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -eng_copyNetPropToNewNet true }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setDelayCalMode -SIAware true }
catch { setHierMode -disableArt false }
catch { setHierMode -reportPostRouteArtTiming false }
catch { setHierMode -trialRouteHonorReadOnly false }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setRouteMode -earlyGlobalRouteSecondPG false }
catch { setFPlanMode -maxIoHeight false }
catch { setFPlanMode -powerRailLayer {} }
